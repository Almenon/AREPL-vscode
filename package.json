{
  "name": "arepl",
  "displayName": "AREPL for python",
  "description": "real-time python scratchpad",
  "version": "2.0.5",
  "publisher": "almenon",
  "engines": {
    "vscode": "^1.36.0"
  },
  "categories": [
    "Other",
    "Debuggers"
  ],
  "activationEvents": [
    "onCommand:extension.currentAREPLSession",
    "onCommand:extension.newAREPLSession",
    "onCommand:extension.newAREPLSessionOnHighlightedCode"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "menus": {
      "editor/title": [
        {
          "when": "editorLangId == python && !arepl && editorHasSelection && config.AREPL.showIcons",
          "command": "extension.newAREPLSession",
          "alt": "extension.currentAREPLSession",
          "group": "navigation"
        },
        {
          "when": "editorLangId == python && !arepl && !editorHasSelection && config.AREPL.showIcons",
          "command": "extension.currentAREPLSession",
          "alt": "extension.newAREPLSession",
          "group": "navigation"
        },
        {
          "when": "arepl && config.AREPL.showIcons",
          "command": "extension.closeAREPL",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "extension.currentAREPLSession"
        },
        {
          "command": "extension.newAREPLSession"
        }
      ],
      "editor/context": [
        {
          "command": "extension.newAREPLSessionOnHighlightedCode",
          "when": "editorHasSelection"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "AREPL configuration",
      "properties": {
        "AREPL.showIcons": {
          "type": "boolean",
          "default": true
        },
        "AREPL.skipLandingPage": {
          "type": "boolean",
          "default": false
        },
        "AREPL.showFooter": {
          "type": "boolean",
          "default": true
        },
        "AREPL.customCSS": {
          "type": "string",
          "default": null,
          "description": "injected into AREPL each run. Use 'Developer: Open Webview Developer Tools' command to inspect arepl html"
        },
        "AREPL.delay": {
          "type": "number",
          "default": 300,
          "description": "delay in milliseconds before executing code after typing"
        },
        "AREPL.restartDelay": {
          "type": "number",
          "default": 300,
          "description": "when restart mode is active we add this to delay to delay longer"
        },
        "AREPL.inlineResults": {
          "type": "boolean",
          "default": true,
          "description": "whether to show errors / results / prints inline. (Currently just error icons)"
        },
        "AREPL.pyGuiLibraries": {
          "type": "array",
          "default": [
            "matplotlib",
            "tkinter",
            "kivy",
            "pyforms",
            "PyQt4",
            "PyQt5",
            "wx",
            "pyside",
            "plotly",
            "ggplot",
            "bokeh",
            "ppb",
            "PySimpleGUI",
            "pyglet"
          ],
          "description": "AREPL enters restart mode when one of these libraries are imported. Process is restarted at end of each run so GUI window is updated"
        },
        "AREPL.whenToExecute": {
          "type": "string",
          "enum": [
            "afterDelay",
            "onSave",
            "onKeybinding"
          ],
          "enumDescriptions": [
            "after a delay (change AREPL.delay to control the amount)",
            "on save",
            "on keyboard shortcut"
          ],
          "default": "afterDelay",
          "description": "When to execute your code"
        },
        "AREPL.show_to_level": {
          "type": "number",
          "default": 2,
          "description": "2 shows x=1 and x=[1,2], provides option to expand deeply nested data like x=[[1]]"
        },
        "AREPL.max_string_length": {
          "type": "number",
          "default": 70,
          "description": "strings over X characters are truncated with an option to expand"
        },
        "AREPL.printResultPlacement": {
          "type": "string",
          "enum": [
            "top",
            "bottom"
          ],
          "enumDescriptions": [
            "print results appear on top",
            "print results appear on bottom"
          ],
          "default": "top"
        },
        "AREPL.pythonPath": {
          "type": "string",
          "default": null,
          "description": "AREPL uses the path you have defined in the official python extension. If not present then this setting will be used. If this setting is also empty then on windows py will be used, or python3 otherwise"
        },
        "AREPL.envFile": {
          "type": "string",
          "default": null,
          "description": "Absolute path to a file containing environment variable definitions. If not set the setting from the python extension will be used, or ${workspaceFolder}/.env if the python extension is not installed"
        },
        "AREPL.pythonOptions": {
          "type": "array",
          "default": [
            "-u"
          ],
          "description": "default -u to see prints in real-time. See https://docs.python.org/3/using/cmdline.html#miscellaneous-options for other options. Changing this setting not reccomended"
        },
        "AREPL.defaultFilterVars": {
          "type": "array",
          "default": [],
          "description": "Any variables with these names are not shown in arepl variable view. You can use the arepl_filter variable in arepl to play around with this setting in real-time"
        },
        "AREPL.defaultFilterTypes": {
          "type": "array",
          "default": [
            "<class 'typing._SpecialForm'>",
            "<class 'typing._SpecialGenericAlias'>",
            "<class 'module'>",
            "<class 'function'>",
            "<class 'builtin_function_or_method'>"
          ],
          "description": "Any variables with these types are not shown in arepl variable view. You can use the arepl_filter_type variable in arepl to play around with this setting in real-time"
        },
        "AREPL.defaultImports": {
          "type": "array",
          "default": [
            "from arepl_dump import dump"
          ],
          "description": "Default imports for new AREPL sessions. dump is included by default so you can use it to inspect variables & local scopes"
        },
        "AREPL.unsafeKeywords": {
          "type": "array",
          "default": [
            "rmdir\\(",
            "rmtree\\("
          ],
          "description": "AREPL will not evaulate your code in real-time mode if one of these keywords are detected. Keywords are applied via regex."
        },
        "AREPL.telemetry": {
          "type": "boolean",
          "default": true,
          "description": "Whether to report useful anonymous data back to developer."
        },
        "AREPL.showSyntaxErrors": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show syntax errors."
        },
        "AREPL.showNameErrors": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show name errors."
        },
        "AREPL.showGlobalVars": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show global vars. Potential speed improvement if turned off - you can still inspect vars with dump()"
        },
        "AREPL.shell_plus": {
          "type": "boolean",
          "default": false,
          "description": "Whether to automatically load django models. This setting doesn't actually do anything yet. See https://github.com/Almenon/AREPL-vscode/issues/279"
        },
        "AREPL.keepPreviousVars": {
          "type": "boolean",
          "default": false,
          "description": "If set to true AREPL will add onto the local state each run instead of clearing it and starting fresh."
        }
      }
    },
    "commands": [
      {
        "command": "extension.currentAREPLSession",
        "title": "eval python in real time (current doc)",
        "category": "AREPL",
        "icon": "./media/happy_cat.svg"
      },
      {
        "command": "extension.newAREPLSession",
        "title": "eval python in real time (new doc)",
        "category": "AREPL",
        "icon": "./media/happy_cat.svg"
      },
      {
        "command": "extension.closeAREPL",
        "title": "closes AREPL",
        "category": "AREPL",
        "icon": "./media/angry_cat_filled.svg"
      },
      {
        "command": "extension.newAREPLSessionOnHighlightedCode",
        "title": "open highlighted code in new AREPL session",
        "category": "AREPL"
      },
      {
        "command": "extension.executeAREPL",
        "title": "trigger a run in the current AREPL session",
        "category": "AREPL"
      },
      {
        "command": "extension.executeAREPLBlock",
        "title": "execute the current block of code",
        "category": "AREPL"
      }
    ],
    "keybindings": [
      {
        "command": "extension.currentAREPLSession",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a",
        "when": "!inQuickOpen && !terminalFocus"
      },
      {
        "command": "extension.newAREPLSession",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+r",
        "when": "!inQuickOpen && !terminalFocus"
      },
      {
        "command": "extension.executeAREPL",
        "key": "ctrl+shift+;",
        "mac": "cmd+shift+;",
        "when": "!inQuickOpen && !terminalFocus && editorLangId == python"
      },
      {
        "command": "extension.executeAREPLBlock",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && editorLangId == python"
      },
      {
        "command": "extension.printDir",
        "key": "alt+enter",
        "mac": "alt+enter",
        "when": "editorTextFocus && editorLangId == python"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "compileOnce": "tsc -p ./",
    "test": "tsc -p ./ && node ./out/test/runTest.js",
    "unitTests": "mocha -ui tdd -r ts-node/register test/*.spec.ts",
    "visualize": "depcruise --exclude 'vscode|^[a-zA-Z0-9\\_]+$' --output-type dot src | dot -T svg > dependencygraph.svg",
    "vscode:uninstall": "node ./out/src/uninstallSurvey"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^9.1.1",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.36.0",
    "decache": "^4.4.0",
    "glob": "^7.1.4",
    "mocha": "^9.2.2",
    "source-map-support": "^0.5.13",
    "ts-node": "^8.6.2",
    "typescript": "^3.9.6",
    "vscode-test": "^1.3.0",
    "vscode-uri": "^2.1.2"
  },
  "dependencies": {
    "arepl-backend": "^2.1.0",
    "opn": "^5.3.0",
    "path": "^0.12.7",
    "vscode-extension-telemetry": "0.4.5"
  },
  "bugs": {
    "url": "https://github.com/almenon/arepl-vscode-wordcount/issues",
    "email": "almenon214@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/almenon/arepl-vscode.git"
  },
  "license": "SEE LICENSE IN <filename>",
  "keywords": [
    "python",
    "real-time",
    "scratchpad"
  ],
  "icon": "media/happy_cat_filled.png"
}
