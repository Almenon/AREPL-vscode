{
  "name": "arepl",
  "displayName": "AREPL for python",
  "description": "real-time python scratchpad",
  "version": "1.0.1",
  "publisher": "almenon",
  "engines": {
    "vscode": "^1.23.0"
  },
  "categories": [
    "Other",
    "Debuggers"
  ],
  "activationEvents": [
    "onCommand:extension.currentAREPLSession",
    "onCommand:extension.newAREPLSession",
    "onCommand:extension.newAREPLSessionOnHighlightedCode"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "AREPL configuration",
      "properties": {
        "AREPL.skipLandingPage": {
          "type": "boolean",
          "default": false
        },
        "AREPL.showFooter": {
          "type": "boolean",
          "default": true
        },
        "AREPL.delay": {
          "type": "number",
          "default": 300,
          "description": "delay in ms before executing code after typing"
        },
        "AREPL.restartDelay": {
          "type": "number",
          "default": 300,
          "description": "when restart mode is active we add this to delay to delay longer"
        },
        "AREPL.pyGuiLibraries": {
          "type": "array",
          "default": [
            "turtle",
            "matplotlib",
            "tkinter",
            "kivy",
            "pyforms",
            "PyQt4",
            "PyQt5",
            "wx",
            "pyside",
            "plotly",
            "ggplot",
            "bokeh"
          ],
          "description": "AREPL enters restart mode when one of these libraries are imported. Process is restarted at end of each run so GUI window is updated"
        },
        "AREPL.whenToExecute": {
          "type": "string",
          "enum": [
            "afterDelay",
            "onSave",
            "onKeybinding"
          ],
          "enumDescriptions": [
            "execute python after a delay",
            "execute python on save"
          ],
          "default": "afterDelay",
          "description": "afterDelay: execute python after delay. onSave: when saving the document. onKeybinding: on whatever keys you have bound to executeAREPL."
        },
        "AREPL.show_to_level": {
          "type": "number",
          "default": 2,
          "description": "2 shows x=1 and x=[1,2], provides option to expand deeply nested data like x=[[1]]"
        },
        "AREPL.max_string_length": {
          "type": "number",
          "default": 70,
          "description": "strings over X characters are truncated with an option to expand"
        },
        "AREPL.printResultPlacement": {
          "type": "string",
          "enum": [
            "top",
            "bottom"
          ],
          "enumDescriptions": [
            "print results appear on top",
            "print results appear on bottom"
          ],
          "default": "bottom"
        },
        "AREPL.pythonPath": {
          "type": "string",
          "default": null,
          "description": "By default python is used if windows or python3 otherwise. Changing this setting not reccomended"
        },
        "AREPL.pythonOptions": {
          "type": "array",
          "default": [
            "-u"
          ],
          "description": "default -u to see prints in real-time. See https://docs.python.org/3/using/cmdline.html#miscellaneous-options for other options. Changing this setting not reccomended"
        },
        "AREPL.defaultImports": {
          "type": "array",
          "default": [
            "from arepldump import dump"
          ],
          "description": "default imports for new AREPL sessions. dump is included by default so you can use it to inspect variables & local scopes"
        },
        "AREPL.telemetry": {
          "type": "boolean",
          "default": true,
          "description": "Whether to report useful anonymous data back to developer."
        }
      }
    },
    "commands": [
      {
        "command": "extension.currentAREPLSession",
        "title": "eval python in real time (current doc)",
        "category": "AREPL"
      },
      {
        "command": "extension.newAREPLSession",
        "title": "eval python in real time (new doc)",
        "category": "AREPL"
      },
      {
        "command": "extension.newAREPLSessionOnHighlightedCode",
        "title": "open highlighted code in new AREPL session",
        "category": "AREPL"
      },
      {
        "command": "extension.executeAREPL",
        "title": "trigger a run in the current AREPL session",
        "category": "AREPL"
      }
    ],
    "keybindings": [
      {
        "command": "extension.currentAREPLSession",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a",
        "when": "!inQuickOpen && !terminalFocus"
      },
      {
        "command": "extension.newAREPLSession",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+r",
        "when": "!inQuickOpen && !terminalFocus"
      },
      {
        "command": "extension.executeAREPL",
        "key": "ctrl+shift+;",
        "mac": "cmd+shift+;",
        "when": "!inQuickOpen && !terminalFocus"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "tsc -p ./ && node ./node_modules/vscode/bin/test",
    "visualize": "depcruise --exclude 'vscode|^[a-zA-Z0-9\\_]+$' --output-type dot src | dot -T svg > dependencygraph.svg"
  },
  "devDependencies": {
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.11.3",
    "mocha": "^5.0.1",
    "typescript": "^3.1.1",
    "vscode": "^1.1.21"
  },
  "dependencies": {
    "arepl-backend": "^1.0.1",
    "opn": "^5.3.0",
    "path": "^0.12.7",
    "vscode-extension-telemetry": "0.0.22"
  },
  "bugs": {
    "url": "https://github.com/almenon/arepl-vscode-wordcount/issues",
    "email": "almenon214@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/almenon/arepl-vscode.git"
  },
  "license": "SEE LICENSE IN <filename>",
  "keywords": [
    "python",
    "real-time",
    "scratchpad"
  ],
  "icon": "media/crappy8BitCat.png"
}
